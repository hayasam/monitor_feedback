buildscript {
    ext {
        springBootVersion = '1.5.3.RELEASE'
    }
    repositories {
        mavenCentral()
		maven {
            url "${artifactory_contextUrl}/libs-snapshot"
            name = 'maven-supersede-snapshot'
		    credentials {
	                username = "${artifactory_user}"
	                password = "${artifactory_password}"
		    }
	    }
		maven {
            url "${artifactory_contextUrl}/libs-release"
            name = 'maven-supersede-release'
		    credentials {
	                username = "${artifactory_user}"
	                password = "${artifactory_password}"
		    }
	    }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    add buildscript.repositories.getByName ("maven-supersede-snapshot")
    add buildscript.repositories.getByName ("maven-supersede-release")
}

configurations {
    providedRuntime
}

war {
    archiveName 'orchestrator.war'
}

jar {
    baseName = 'feedback_orchestrator'
    version = '2.0.0'
    manifest {
        attributes(
                'Main-Class': 'ch.fhnw.cere.orchestrator.OrchestratorApplication'
        )
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-devtools'
    compile 'com.google.guava:guava:21.0'
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.7.0'
    compile group: 'org.hibernate', name: 'hibernate-envers', version: '5.2.10.Final'
    
    compile("eu.supersede.if:eu.supersede.if.api:0.3.0-SNAPSHOT"){changing = true} 
    compile(group: 'eu.supersede.feedback_gathering', name: 'feedback_library', version: '0.0.1-SNAPSHOT')
    compile(group: 'org.wso2.andes.wso2', name: 'andes-client', version: '3.1.1')
    compile(group: 'org.apache.geronimo.specs.wso2', name: 'geronimo-jms_1.1_spec', version: '1.1.0.wso2v1')
    compile(group: 'org.wso2.carbon', name: 'org.wso2.carbon.logging', version: '4.4.1')
    compile(group: 'org.wso2.securevault', name: 'org.wso2.securevault', version: '1.0.0-wso2v2')

    runtime 'mysql:mysql-connector-java'

    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    testCompile group: 'org.springframework', name: 'spring-test', version: '4.3.8.RELEASE'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.7.0'
    testCompile group: 'org.dbunit', name: 'dbunit', version: '2.4.3'
    testCompile group: 'com.github.springtestdbunit', name: 'spring-test-dbunit', version: '1.3.0'
    testCompile group: 'com.jayway.restassured', name: 'spring-mock-mvc', version: '2.9.0'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.9.5'
}

configurations.all {
        //Avoids conflict: SL4J Multiple bindings were found on the class path
        exclude group: "org.slf4j", module: "slf4j-log4j12"
        // check for updates every build
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
}